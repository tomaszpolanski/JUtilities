apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'jacoco'

group = 'com.github.tomaszpolanski'

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven { url "http://repo1.maven.org/maven2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$project.ext.KOTLIN_VERSION"
    }
}

version = '1.3.0'

sourceSets {
    test.java.srcDirs += 'src/test/kotlin'
}

afterEvaluate {
    sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith("test")) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':functions')
    compile 'org.jetbrains:annotations:13.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile "org.jetbrains.kotlin:kotlin-stdlib:1.0.1-2"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:1.0.0"
    testCompile('org.assertj:assertj-core:1.7.1')
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
